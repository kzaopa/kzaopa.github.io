<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>互联网企业安全高级指南</title>
      <link href="/2022/06/19/%E4%BA%92%E8%81%94%E7%BD%91%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E9%AB%98%E7%BA%A7%E6%8C%87%E5%8D%97/"/>
      <url>/2022/06/19/%E4%BA%92%E8%81%94%E7%BD%91%E4%BC%81%E4%B8%9A%E5%AE%89%E5%85%A8%E9%AB%98%E7%BA%A7%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h2 id="互联网企业安全高级指南"><a href="#互联网企业安全高级指南" class="headerlink" title="互联网企业安全高级指南"></a>互联网企业安全高级指南</h2><ul><li><p>3.4 业务需要想安全妥协吗<br>妥协不应该发生在工程师层面，而是应该在<code>Leader</code>和安全负责人这个层面</p></li><li><p>3.5 选择在不同的维度做防御<br><strong>风险缓解的原则</strong>是在以下三者之间做最大平衡：</p><ul><li>1）风险暴露程度；</li><li>2）研发运维变更成本；</li><li>3）用户体验的负面影响。</li></ul></li><li><p>3.9 关于ISO27001<br>安全标准的价值就是告诉你，在安全建设的领域里可能有那么100件事情是需要做的，但具体选择做80件还是99件还是100件全做是你自己的事情，它只是告诉你100件事情是什么，但是这100件事情怎么实现，对应的技术方案或流程是什么它不会告诉你，实现和落地是需要自己去想的，它本质上是用于开拓视野。</p></li><li><p>5.2.1 互联网安全理念<br>互联网安全有几个比较核心的需求：<strong>快速检测、有限影响、快速溯源、快速恢复</strong></p></li><li><p>6.3 服务器4A<br>4A是指：账户（Account）、认证（Authentication）、授权（Authorization）、审计（Audit）。</p></li><li><p>7.2.1 DDos分类<br><code>DDos</code>攻击本质上是一种只能缓解而不能完全防御的攻击，近源清晰、云清洗。</p><ul><li>1.网络层攻击<br><code>Syn-flood</code> ———— 利用<code>TCP</code>建立<code>3</code>次握手的”漏洞”，通过原始套接字发送源地址虚假的<code>SYN</code>报文，使目标主机永远无法完成<code>3</code>次握手，占满了系统的协议栈队列，资源得不到释放，进而拒绝服务，是互联网中最主要的<code>DDos</code>攻击形式之一。<br><code>ACK-flood</code> ———— 对于虚假的<code>ACK</code>包，目标设备会直接回复<code>RST</code>包丢弃连接，所以伤害值远不如<code>syn-flood</code>。<br><code>UDP-flodd</code> ———— 使用原始套接字伪造大量虚假源地址的<code>UDP</code>包，目前以<code>DNS</code>协议为主。<br><code>ICMP-flood</code> ———— <code>Ping</code>洪水，是一种是比较古老的方式。</li><li>2.应用层攻击<br><code>CC</code> ———— <code>ChallgeCollapsar</code>的名字源于挑战国内知名安全厂商绿盟的抗<code>DDos</code>设备 —— “黑洞”。<code>CC</code>是目前应用层攻击主要手段之一，在防御上有一些方法，但不能完美解决这个问题。<br><code>DNS flood</code> ———— 伪造源地址的海量<code>DNS</code>请求，用于淹没目标的<code>DNS</code>服务器。<br>慢速链接攻击 ———— 针对<code>HTTP</code>协议，以知名的<code>slowloris</code>攻击为起源：先建立<code>HTTP</code>链接，设置一个较大的<code>content-length</code>，每次值发送很少的字节，让服务器一直以为<code>HTTP</code>头部没有传输完成，这样的链接一多很快就会出现链接耗尽。<code>HTTP</code>慢速的<code>post</code>请求和慢速的<code>read</code>请求都是基于相同的原理。<br><code>DOS</code>攻击  ———— 有些服务器程序存在<code>bug</code>、安全漏洞或架构性缺陷 ，攻击者可以通过构造畸形的请求发送给服务器，服务器因不能正确的处理恶意请求而陷入僵死状态，导致拒绝服务。</li><li>3.攻击方式<br>混合型攻击 ———— 在实际大流量的攻击中，通常并不是以上述一中数据类型来攻击，往往是混杂了<code>TCP</code>和<code>UDP</code>流量，网络层和应用层攻击同时进行。<br>反射型攻击 ————  反射型攻击的本质是利用”质询-应答”式协议，将质询包的源地址通过原始套接字伪造设置为目标地址，则应答的”回包”都被发送至目标，如果回包体积比较大或协议支持递归效果，攻击流量会被放大，成为一种高性价比的流量型攻击。反射型攻击利用的协议目前包括<code>NTP</code>、<code>Chargen</code>、<code>SSDP</code>、<code>DNS</code>、<code>RPC Portmap</code>等等。<br>流量放大型攻击 ———— 参加”第7章 网路安全 p98”<br>脉冲型攻击 ———— 很多攻击持续的时间非常短，通常5分钟以内，流量图上表现为突刺装的脉冲。<br>链路泛洪型攻击 ———— 链路泛洪（<code>link-flooding</code>），这种方式不直接攻击目标，而是以堵塞目标网络的上一级链路为目的。</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 互联网企业安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>应急响应</title>
      <link href="/2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
      <url>/2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<h2 id="定义及流程"><a href="#定义及流程" class="headerlink" title="定义及流程"></a>定义及流程</h2><p><strong>应急响应:</strong> <code>背景、现状、需求</code></p><pre><code>——(信息系统安全等级保护体系框架GA/T 708-2007)</code></pre><blockquote><p>应急响应通常是指一个组织为了应对各种意外事件的发生所做的准备以及在事件发生后所采取的措施。信息系统安全事件应急响应的对象是指针对信息系统所存储、传输、处理的信息的安全事件。事件的主体可能来自自然界、系统自身故障、组织内部或外部的人为攻击等。</p></blockquote><p><strong>应急处置</strong></p><pre><code> ——(信息安全应急响应计划规范GB/T24363-2009）</code></pre><blockquote><p>启动应急响应计划后，应立即采取相关措施抑制信息安全事件影响，避免造成更大损失。在确定有效控制了信息安全事件影响后，开始实施恢复操作。恢复阶段的行动集中于建立临时业务处理能力、修复原系统的损害、在原系统或新设施中恢复运行业务能力等应急措施。</p></blockquote><p><strong>六大阶段：</strong> 准备、检测、抑制、根除、恢复、跟踪</p><p><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/liu.png"><br><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/yjxy.png"></p><h2 id="应急处置"><a href="#应急处置" class="headerlink" title="应急处置"></a>应急处置</h2><pre><code>when、who、where、what</code></pre><p><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/yjcz.png"></p><h2 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h2><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><pre><code>用户信息、敏感目录、敏感文件</code></pre><p>linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">查看具有登录权限用户: <span class="built_in">cat</span> /etc/passwd |grep bash</span><br><span class="line">查看uid为0的用户: awk -F: <span class="string">&#x27;$3==0&#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class="line">查看用户是否具有sudo权限: more /etc/sudoers | grep -v <span class="string">&quot;^#\|^$&quot;</span> | grep <span class="string">&quot;ALL=(ALL)&quot;</span> 或 sudo -l -U username     </span><br><span class="line">历史命令: <span class="built_in">history</span> 或 <span class="built_in">cat</span> ~/.bash_history</span><br><span class="line">查看环境变量: <span class="built_in">echo</span> <span class="variable">$PATH</span> 或 <span class="built_in">env</span></span><br><span class="line">敏感目录: ~/.ssh/  <span class="built_in">ls</span> -alt /tmp 目录下.和..开头的文件夹等</span><br></pre></td></tr></table></figure><ul><li><p><u>&#x2F;etc&#x2F;passwd</u><br>root:x:0:0:root:&#x2F;root:&#x2F;bin&#x2F;bash<br>account:password:UID:GID:GECOS:directory:shell<br>用户名:密码:用户ID:组ID:用户描述性信息:主目录:默认Shell</p></li><li><p><u>&#x2F;etc&#x2F;shadow</u><br>root:$6$oGs1PqhL2p3ZetrE$X7o7bzoouHQVSEmSgsYN5UD4.kMHx6qgbTqwNVC5oOAouXvcjQSt.Ft7ql1WpkopY0UV 9ajBwUt1DpYxTCVvI&#x2F;:16809:0:99999:7:::<br>用户名:加密密码:密码最后一次修改日期:两次密码的修改时间间隔:密码有效期:密码修改到期到的警告天数:密码过期之 后的宽限天数:账号失效时间:保留</p></li></ul><p>windows</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">系统信息: msinfo32、systeminfo</span><br><span class="line">用户列表: <span class="built_in">net</span> user 或 lusrmgr.msc</span><br><span class="line">在线用户: query user</span><br><span class="line">共享目录: <span class="built_in">net</span> share</span><br><span class="line">最近访问文件: <span class="variable">%UserProfile%</span>\Recent</span><br><span class="line">敏感目录: <span class="variable">%temp%</span> 、 <span class="variable">%appdata%</span> 、 <span class="variable">%localappdata%</span> 、 <span class="variable">%WINDIR%</span> 、 <span class="variable">%WINDIR%</span>\system32\</span><br><span class="line">回收站、浏览器下载目录、浏览器历史记录、用户列表目录</span><br></pre></td></tr></table></figure><hr><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><pre><code>启动项、计划任务、服务</code></pre><p>linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">启动项</span><br><span class="line">确定运行级别: runlevel</span><br><span class="line">开机启动脚本存放目录: /etc/init.d/</span><br><span class="line">建立软链接对应目录:  /etc/init.d/ ==&gt; /etc/rc.local</span><br><span class="line">示例: <span class="built_in">ln</span> -s /etc/init.d/sshd /etc/rc.d/rc3.d/S100ssh</span><br><span class="line">此处sshd是具体服务的脚本文件，S100ssh是其软链接，S开头代表加载时自启动；如果是K开头的脚本文件，代表运行级别加载时需要关闭的</span><br><span class="line"></span><br><span class="line">计划任务查看: crontab -l </span><br><span class="line">计划任务文件目录: /var/spool/cron/</span><br><span class="line">删除所有计划任务: crontab -r </span><br><span class="line">编辑当前的crontab文件: crontab -e</span><br><span class="line">示例(可查看/etc/crontab): */1 * * * * <span class="built_in">echo</span> <span class="string">&quot;hello world&quot;</span> &gt;&gt; /tmp/test.txt 每分钟写入文件</span><br><span class="line"></span><br><span class="line">服务自启: chkconfig --list 或 systemctl list-unit-files</span><br></pre></td></tr></table></figure><p>定时任务常见目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/var/spool/cron/*</span><br><span class="line">/etc/crontab</span><br><span class="line">/etc/cron.d/*</span><br><span class="line">/etc/cron.daily/*</span><br><span class="line">/etc/cron.hourly/*</span><br><span class="line">/etc/cron.monthly/*</span><br><span class="line">/etc/cron.weekly/</span><br><span class="line">/etc/anacrontab</span><br><span class="line">/var/spool/anacron/*</span><br></pre></td></tr></table></figure><p>windows</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">启动项: msconfig 或 【开始】&gt;【所有程序】&gt;【启动】</span><br><span class="line">注册列表: regedit</span><br><span class="line">HKEY_CURRENT_USER\software\micorsoft\windows\currentversion\run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</span><br><span class="line">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Runonce</span><br><span class="line">组策略: gpedit.msc  计算机配置-Windows设置-脚本(启动/关机)</span><br><span class="line"></span><br><span class="line">定时任务: <span class="built_in">at</span> 或 compmgmt.msc 任务计划程序</span><br><span class="line"></span><br><span class="line">服务: services.msc</span><br></pre></td></tr></table></figure><hr><h3 id="网络进程"><a href="#网络进程" class="headerlink" title="网络进程"></a>网络进程</h3><pre><code>网络连接、进程、端口</code></pre><p>linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">查看网络连接: netstat -anlp</span><br><span class="line">端口情况: lsof -i:port</span><br><span class="line">ip情况: lsof -i@ip</span><br><span class="line">进程状态: ps -aux 显示所有包含其他使用者的行程 或 ps -ef</span><br><span class="line">查看下pid所对应的进程文件路径: <span class="built_in">ls</span> -l /proc/<span class="variable">$PID</span>/exe 或 file /proc/<span class="variable">$PID</span>/exe</span><br><span class="line">彻底杀死进程: <span class="built_in">kill</span> -9 进程名</span><br><span class="line">杀死指定用户所有进程: <span class="built_in">kill</span> -9 $(ps -ef | grep username)</span><br></pre></td></tr></table></figure><p>windows</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">网络连接: netstat -ano| <span class="built_in">more</span></span><br><span class="line">显示每个连接或侦听端口时涉及的可执行程序：netstat -b</span><br><span class="line">根据pid定位进程：tasklist /svc| <span class="built_in">findstr</span> &quot;pid&quot;</span><br><span class="line">结束或删除进程：<span class="built_in">taskkill</span> /f /im sesvc.exe</span><br><span class="line">确定进程对应的程序位置: wmic &gt; process where name=&quot;映像名称&quot; 或 任务管理器 &gt; 选择对应进程 &gt; 右键打开文件位置</span><br><span class="line">进程查看:【开始】&gt;【运行】&gt; msinfo32 &gt; 【软件环境】&gt; 【正在运行任务】</span><br></pre></td></tr></table></figure><p><font color="#dd0000">注: windows默认不区分大小写，findstr筛选关键字区分大小写</font></p><p>网络连接状态<br><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/wlljzt.png"></p><hr><h3 id="文件查找"><a href="#文件查找" class="headerlink" title="文件查找"></a>文件查找</h3><p>linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">按时间排序列出目录下文件(-R遍历子目录): <span class="built_in">ls</span> -lhat</span><br><span class="line">查找特定权限的文件: find / -name \*.php -perm 777 或 find / -name <span class="string">&#x27;*.php&#x27;</span> -perm 777 </span><br><span class="line">查找某段时间修改过的文件: find / -mmin -60 -<span class="built_in">type</span> f |grep <span class="string">&#x27;pan’</span></span><br></pre></td></tr></table></figure><p>windows</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">关键词查找: <span class="built_in">dir</span> /s C:\*panghu*</span><br><span class="line">文件创建时间倒序排列: <span class="built_in">dir</span> /s /o-d /tc</span><br><span class="line">查找特定时间内修改过的文件: <span class="built_in">dir</span> /s /tw C:\*panghu*| <span class="built_in">findstr</span> <span class="number">2021</span>/<span class="number">02</span></span><br></pre></td></tr></table></figure><ul><li>文件修改时间在创建时间之前需重点关注<br><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/wenjian.png"></li></ul><hr><h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><p>linux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">默认存放目录: /var/log/</span><br><span class="line">日志配置情况: /etc/rsyslog.conf</span><br><span class="line">登录失败日志: lastb 或 last -f /var/log/btmp</span><br><span class="line">用户登录成功情况: last 或 last -f /var/log/wtmp </span><br><span class="line">最后一次登录记录: lastlog 或 /var/log/lastlog</span><br><span class="line">用户登录日志: /var/log/secure</span><br><span class="line">查看多少IP在爆破主机的root帐号: grep <span class="string">&quot;Failed password for root&quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $11&#125;&#x27;</span> | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -nr | more</span><br><span class="line">登录成功的日期、用户名、IP: grep <span class="string">&quot;Accepted password for &quot;</span> /var/log/secure | awk <span class="string">&#x27;&#123;print $1,$2,$3,$9,$11&#125;&#x27;</span></span><br><span class="line">当前登录用户信息: w、<span class="built_in">who</span>、<span class="built_in">users</span>、/var/run/utmp</span><br></pre></td></tr></table></figure><p>Windows主要有以下三类日志记录系统事件:</p><ul><li><p>应用程序日志<br>记录操作系统组件产生的事件，主要包括驱动程序、系统组件和应用软件的崩溃以及数据丢失错误等。系统日志中记录的时间类型 由Windows NT&#x2F;2000操作系统预先定义。<br><code>默认位置:%SystemRoot%\System32\Winevt\Logs\Application.evtx</code></p></li><li><p>系统日志<br>包含由应用程序或系统程序记录的事件，主要记录程序运行方面的事件，例如数据库程序可以在应用程序日志中记录文件错误，程<br>序开发人员可以自行决定监视哪些事件。如果某个应用程序出现崩溃情况，那么我们可以从程序事件日志中找到相应的记录，也许<br>会有助于你解决问题。<br><code>默认位置: %SystemRoot%\System32\Winevt\Logs\System.evtx</code></p></li><li><p>安全日志<br>记录系统的安全审计事件，包含各种类型的登录日志、对象访问日志、进程追踪日志、特权使用、帐号管理、策略变更、系统事<br>件。安全日志也是调查取证中最常用到的日志。默认设置下，安全性日志是关闭的，管理员可以使用组策略来启动安全性日志，或<br>者在注册表中设置审核策略，以便当安全性日志满后使系统停止响应。<br><code>默认位置:%SystemRoot%\System32\Winevt\Logs\Security.evtx</code></p></li></ul><p>日志记录内容取决于审核策略的配置(默认状态下并没有启用)：【开始】&gt;【管理工具】&gt;【本地安全策略】&gt;【本地策略】&gt;【审核策略】<br><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/shcl.png"></p><p>日志属性设置：日志最大大小、达到覆盖阀值时操作等。<br><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/rizhi.png"></p><ul><li><p><code>Windows</code>事件日志常用<code>EVENT ID</code></p><table><thead><tr><th align="left">事件ID</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">4624</td><td align="left">登录成功</td></tr><tr><td align="left">4625</td><td align="left">登录失败</td></tr><tr><td align="left">4634</td><td align="left">注销成功</td></tr><tr><td align="left">4647</td><td align="left">用户启动的注销</td></tr><tr><td align="left">4720</td><td align="left">创建用户</td></tr></tbody></table></li><li><p>登录类型说明</p><table><thead><tr><th align="left">登录类型</th><th align="left">描述</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">2</td><td align="left">交互式登录(Interactive)</td><td align="left">用户在本地进行登录。</td></tr><tr><td align="left">3</td><td align="left">网络(Network)</td><td align="left">最常见的情况就是连接到共享文件夹或共享打印机时。</td></tr><tr><td align="left">4</td><td align="left">批处理(Batch)</td><td align="left">通常表明某计划任务启动。</td></tr><tr><td align="left">5</td><td align="left">服务(Service)</td><td align="left">每种服务都被配置在某个特定的用户账号下运行。</td></tr><tr><td align="left">7</td><td align="left">解锁(Unlock)</td><td align="left">屏保解锁。</td></tr><tr><td align="left">8</td><td align="left">网络明文(NetworkCleartext)</td><td align="left">登录的密码在网络上是通过明文传输的，如FTP。</td></tr><tr><td align="left">9</td><td align="left">新凭证(NewCredentials)</td><td align="left">使用带&#x2F;Netonly参数的RUNAS命令运行一个程序。</td></tr><tr><td align="left">10</td><td align="left">远程交互，(RemoteInteractive)</td><td align="left">通过终端服务、远程桌面或远程协助访问计算机。</td></tr><tr><td align="left">11</td><td align="left">缓存交互(CachedInteractive)</td><td align="left">以一个域用户登录而又没有域控制器可用</td></tr></tbody></table></li></ul><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">日志查看: eventvwr.msc 或 【开始】&gt;【控制面板】&gt;【管理工具】&gt;【事件查看器】</span><br></pre></td></tr></table></figure><ul><li><p>LogParser筛选语法：查询登录时间、用户名、类型、进程文件、源IP，输出到4624.csv文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">登录成功:</span><br><span class="line">LogParser.exe -i:EVT -o:csv &quot;SELECT TimeGenerated as LoginTime, EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;) as username,EXTRACT_TOKEN(Strings, 8, &#x27;|&#x27;) as LogonType,EXTRACT_TOKEN(Strings, 17, &#x27;|&#x27;) AS ProcessName,EXTRACT_TOKEN(Strings, 18, &#x27;|&#x27;) AS SourceIP FROM &#x27;C:\Users\kzaopa\Desktop\10.192.1.114\Security.evtx&#x27; where EventID in (4624)&quot; &gt; C:\Users\kzaopa\Desktop\4624.csv</span><br><span class="line">登录失败:</span><br><span class="line">LogParser.exe -i:EVT -o:csv &quot;SELECT TimeGenerated as LoginTime, EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;) as username,EXTRACT_TOKEN(Strings, 10, &#x27;|&#x27;) as LogonType,EXTRACT_TOKEN(Strings, 18, &#x27;|&#x27;) AS ProcessName,EXTRACT_TOKEN(Strings, 19, &#x27;|&#x27;) AS SourceIP FROM &#x27;C:\Users\kzaopa\Desktop\10.192.1.114\Security.evtx&#x27; where EventID in (4625)&quot; &gt; C:\Users\kzaopa\Desktop\4625.csv</span><br></pre></td></tr></table></figure></li><li><p>Log Parser Lizard查询语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">登录成功:</span><br><span class="line">SELECT top 10 ComputerName, TimeGenerated, EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;) as username,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 8, &#x27;|&#x27;) as LogonType,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 17, &#x27;|&#x27;) AS ProcessName,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 18, &#x27;|&#x27;) AS SourceIP</span><br><span class="line">FROM &#x27;C:\Users\kzaopa\Desktop\10.192.1.114\Security.evtx&#x27;</span><br><span class="line">where EventID in (4624)</span><br><span class="line">登录失败:</span><br><span class="line">SELECT top 10 ComputerName, TimeGenerated, EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;) as username,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 10, &#x27;|&#x27;) as LogonType,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 18, &#x27;|&#x27;) AS ProcessName,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 19, &#x27;|&#x27;) AS SourceIP</span><br><span class="line">FROM &#x27;C:\Users\kzaopa\Desktop\10.192.1.114\Security.evtx&#x27;</span><br><span class="line">where EventID in (4625)</span><br><span class="line"></span><br><span class="line">查询时间段内登录失败日志:</span><br><span class="line">SELECT ComputerName, TimeGenerated, EXTRACT_TOKEN(Strings,5,&#x27;|&#x27;) as username,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 10, &#x27;|&#x27;) as LogonType,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 18, &#x27;|&#x27;) AS ProcessName,</span><br><span class="line">    EXTRACT_TOKEN(Strings, 19, &#x27;|&#x27;) AS SourceIP</span><br><span class="line">FROM &#x27;C:\Users\kzaopa\Desktop\10.192.1.114\Security.evtx&#x27;</span><br><span class="line">where EventID in (4625)</span><br><span class="line">and TO_DATE(TimeGenerated) between timestamp(&#x27;2022-05-26&#x27;, &#x27;yyyy-MM-dd&#x27;) and timestamp(&#x27;2022-05-27&#x27;, &#x27;yyyy-MM-dd&#x27;)</span><br></pre></td></tr></table></figure></li><li><p>Log Parser Lizard查询时间段内登录失败日志<br><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/rzcx.png"></p></li></ul><hr><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ul><li><p>dir命令</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/T 控制显示或用来分类的时间字符域。</span><br><span class="line">    C  创建时间</span><br><span class="line">    A  上次访问时间</span><br><span class="line">    W  上次写入的时间</span><br><span class="line"></span><br><span class="line">/O          用分类顺序列出文件。</span><br><span class="line">排列顺序     N  按名称(字母顺序)     S  按大小(从小到大)</span><br><span class="line">            E  按扩展名(字母顺序)   D  按日期/时间(从先到后)</span><br><span class="line">            G  组目录优先          -  反转顺序的前缀</span><br><span class="line"></span><br><span class="line">/A          显示具有指定属性的文件。</span><br><span class="line">属性         D  目录               R  只读文件</span><br><span class="line">            H  隐藏文件            A  准备存档的文件</span><br><span class="line">            S  系统文件            I  无内容索引文件</span><br><span class="line">            L  解析点              -  表示“否”的前缀</span><br></pre></td></tr></table></figure></li><li><p>grep</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">grep显示前后几行信息:</span><br><span class="line">grep -C 3 foo file 显示file文件里匹配foo字串那行以及上下3行</span><br><span class="line">grep -B 3 foo file 显示foo及前3行</span><br><span class="line">grep -A 3 foo file 显示foo及后3行</span><br><span class="line">查看grep版本号的方法是</span><br><span class="line">grep -V</span><br><span class="line"></span><br><span class="line">grep 查找含有某字符串的所有文件:</span><br><span class="line">grep -rn <span class="string">&quot;hello,world!&quot;</span></span><br><span class="line">* : 表示当前目录所有文件，也可以是某个文件名 </span><br><span class="line">-r 是递归查找</span><br><span class="line">-n 是显示行号</span><br><span class="line">-R 查找所有文件包含子目录</span><br><span class="line">-i 忽略大小写</span><br></pre></td></tr></table></figure></li><li><p>tail</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f filename.log         循环读取某文件并输出</span><br><span class="line"><span class="built_in">tail</span> -n +20 filename.log     显示文件的内容，从第20行至文件末尾</span><br><span class="line"><span class="built_in">cat</span> input_file | <span class="built_in">tail</span> -n +100 | <span class="built_in">head</span> -n 200      从第100行开始，显示200行。即显示100~299行</span><br><span class="line">-f 循环读取 </span><br><span class="line">-c 显示的字节数</span><br><span class="line">-n 显示文件的尾部 n 行内容 </span><br></pre></td></tr></table></figure></li><li><p>sort</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-n 依照数值的大小排序。</span><br><span class="line">-r 以相反的顺序来排序。</span><br><span class="line">-b 忽略每行前面开始出的空格字符。</span><br><span class="line">-f 排序时，将小写字母视为大写字母。</span><br><span class="line">-d 排序时，处理英文字母、数字及空格字符外，忽略其他的字符。</span><br></pre></td></tr></table></figure></li><li><p>uniq</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-c或--count 在每列旁边显示该行重复出现的次数。</span><br><span class="line">-d或--repeated 仅显示重复出现的行列。</span><br></pre></td></tr></table></figure></li><li><p>ls<br><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/lstime.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-a 显示所有文件及目录 (. 开头的隐藏文件也会列出)</span><br><span class="line">-l 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出</span><br><span class="line">-r 将文件以相反次序显示(原定依英文字母次序)</span><br><span class="line">-t 将文件依建立时间之先后次序列出</span><br><span class="line">-A 同 -a ，但不列出 <span class="string">&quot;.&quot;</span> (目前目录) 及 <span class="string">&quot;..&quot;</span> (父目录)</span><br><span class="line">-F 在列出的文件名称后加一符号；例如可执行档则加 <span class="string">&quot;*&quot;</span>, 目录则加 <span class="string">&quot;/&quot;</span></span><br><span class="line">-R 若目录下有文件，则以下之文件亦皆依序列出</span><br><span class="line">-h 与-l 一起，以易于阅读的格式输出文件大小(例如 1K 234M 2G)</span><br></pre></td></tr></table></figure></li><li><p>find</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">查找/tmp/目录近一小时修改过的文件: find /tmp/ -mmin -60 -<span class="built_in">type</span> f</span><br><span class="line"><span class="built_in">type</span>:查找某一类型文档</span><br><span class="line">b : 块设备文</span><br><span class="line">d : 目录</span><br><span class="line">c : 字符设备文档</span><br><span class="line">P : 管道文档</span><br><span class="line">l : 符号链接文档</span><br><span class="line">f : 普通文档</span><br><span class="line">[a|c|m]min（分钟）、[a|c|m]time（天）</span><br><span class="line"></span><br><span class="line">find查找时间线理解</span><br><span class="line">---(+n)-------|--------(n)--------|-------(-n)---</span><br><span class="line">  (n+1)*24H前 | (n+1)*24H~n*24H间  |n*24H内</span><br><span class="line">-mtime -n查找距现在 n*24H 内修改过的文件</span><br><span class="line">-mtime n查找距现在 n*24H 前, (n+1)*24H 内修改过的文件</span><br><span class="line">-mtime +n查找距现在 (n+1)*24H 前修改过的文件</span><br></pre></td></tr></table></figure><p><img src="/./2022/06/15/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/findtime.png"></p></li></ul><hr><h3 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h3><p><a href="https://www.d99net.net/down/d_safe_2.1.6.5.zip" title="d_safe_2.1.6.5.zip">D盾</a> | <a href="https://down5.huorong.cn/sysdiag-all-5.0.68.3-2022.6.16.2.exe" title="sysdiag-all-5.0.68.3-2022.6.16.2.exe">火绒剑</a> | <a href="https://download.microsoft.com/download/f/f/1/ff1819f9-f702-48a5-bbc7-c9656bc74de8/LogParser.msi" title="LogParser.msi">LogParser</a></p><hr><h2 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h2><ul><li><code>应急响应实战笔记_2020最新版.pdf</code></li><li><code>应急响应知识手册20180723-张永印.pdf</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 应急响应 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 应急响应 </tag>
            
            <tag> 应急处置 </tag>
            
            <tag> 日志分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序测试</title>
      <link href="/2022/06/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95/"/>
      <url>/2022/06/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>找到对应目标小程序后可利用手机或pc上设置代理，在burpsuite捕获发起的<code>http/https</code>请求进行测试。</p><p><img src="/./2022/06/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95/zhuabao.png"></p><p>除此之外还可以反编译小程序静态资源包阅读js代码，尝试挖掘可能存在的风险点。微信小程序文件存放路径：</p><p><strong>Android</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/data/data/com.tencent.mm/MicroMsg/&#123;&#123;user哈希值&#125;&#125;/appbrand/pkg/</span><br></pre></td></tr></table></figure><p><strong>IOS</strong></p><blockquote><p>没抓过，不知道</p></blockquote><p><strong>Windows</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users&#123;&#123;系统用户名&#125;&#125;\Documents\WeChat Files\Applet\</span><br></pre></td></tr></table></figure><p><strong>MacOS</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/Library/Group Containers/5A4RE8SF68.com.tencent.xinWeChat/Library/Caches/xinWeChat/&#123;&#123;user哈希值&#125;&#125;/WeApp/LocalCache/release/</span><br></pre></td></tr></table></figure><p>找到的文件大概长这个样子，里面可能有一个或多个<code>*.wxapkg</code>包。</p><p><img src="/./2022/06/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95/wxapkg.png"></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>用<code>android</code>获取小程序<code>wxapkg</code>包，使用如下工具进行解包。</p><blockquote><p><a href="https://github.com/xuedingmiaojun/wxappUnpacker" title="解包工具">https://github.com/xuedingmiaojun/wxappUnpacker</a></p></blockquote><p>如果是<code>windows</code>和<code>macos</code>上获取的不能直接解包，网上说需要用工具解密后再解包。<del>macos测试失败</del></p><blockquote><p><a href="https://github.com/BlackTrace/pc_wxapkg_decrypt" title="解密工具">https://github.com/BlackTrace/pc_wxapkg_decrypt</a></p></blockquote><p>运行报错尝试安装如下依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm i escodegen -S</span><br><span class="line">npm install esprima -g</span><br><span class="line">npm install css-tree -g</span><br><span class="line">npm install cssbeautify -g</span><br><span class="line">npm install vm2 -g</span><br><span class="line">npm install uglify-es -g</span><br><span class="line">npm install js-beautify -g</span><br><span class="line">npm install escodegen -g</span><br></pre></td></tr></table></figure><h2 id="解包"><a href="#解包" class="headerlink" title="解包"></a>解包</h2><p>如果存在多个包里面有一个是主包，利用解包工具挨个尝试，没报错的就表示解包成功。 <code>./bingo.sh _-243331381_19.wxapkg</code></p><p><strong>子包</strong><br><img src="/./2022/06/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95/zibao.png"><br><strong>主包</strong><br><img src="/./2022/06/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95/zhubao.png"></p><p>解包成功文件保存在与<code>*.wxapkg</code>同名文件夹，文件结构大致如下，可以找找接口测试越权、未授权，说不定存有明文密码之类的。</p><p><img src="/./2022/06/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%B5%8B%E8%AF%95/content.png"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>base</title>
      <link href="/2022/06/01/base/"/>
      <url>/2022/06/01/base/</url>
      
        <content type="html"><![CDATA[<p><img src="/./2022/06/01/base/year.jpg"></p><h3 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npx hexo server</span><br><span class="line">npx hexo new &#x27;article&#x27;</span><br><span class="line">npx hexo clean      清空./public目录, 既之前生成的所有静态资源文件</span><br><span class="line">npx hexo generate</span><br><span class="line">npx hexo deploy     生成的静态资源在./public目录下, 将push上github即可</span><br></pre></td></tr></table></figure><h3 id="go"><a href="#go" class="headerlink" title="go"></a>go</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">iGo</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;GO Environment configuration...&#x27;</span></span><br><span class="line">    wget https://go.dev/dl/go1.17.9.linux-amd64.tar.gz</span><br><span class="line">    tar -C /usr/local -xzf go1.17.9.linux-amd64.tar.gz</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;export PATH=$PATH:/usr/local/go/bin&#x27;</span> &gt;&gt; /etc/profile</span><br><span class="line">    <span class="built_in">source</span> /etc/profile</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">iNode</span></span>()&#123;</span><br><span class="line">    <span class="built_in">cd</span> /tmp</span><br><span class="line">    wget https://nodejs.org/dist/v16.15.0/node-v16.15.0-linux-x64.tar.xz</span><br><span class="line">    xz -d node-v16.15.0-linux-x64.tar.xz</span><br><span class="line">    tar -xf node-v16.15.0-linux-x64.tar</span><br><span class="line">    <span class="built_in">mv</span> node-v16.15.0-linux-x64 /opt/node-v16.15.0</span><br><span class="line">    <span class="built_in">ln</span> -s /opt/node-v16.15.0/bin/node /usr/local/bin/node</span><br><span class="line">    <span class="built_in">ln</span> -s /opt/node-v16.15.0/bin/npm /usr/local/bin/npm</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">iDcoker</span></span>()&#123;</span><br><span class="line">    curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line">    sudo sh get-docker.sh --mirror Aliyun</span><br><span class="line">    <span class="comment"># service docker restart</span></span><br><span class="line">    systemctl restart docker</span><br><span class="line">    sudo curl -L https://github.com/docker/compose/releases/download/1.16.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` -o /usr/local/bin/docker-compose</span><br><span class="line">    <span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="l2tp"><a href="#l2tp" class="headerlink" title="l2tp"></a>l2tp</h3><p><code>l2tp</code> 开放端口策略：<code>UDP 500/1701/4500</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">iVPN</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;vpn install...&#x27;</span></span><br><span class="line">    <span class="built_in">cd</span> /tmp/</span><br><span class="line">    wget https://raw.githubusercontent.com/hwdsl2/setup-ipsec-vpn/master/vpnsetup.sh &amp;&amp; sudo sh vpnsetup.sh</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">iMetaSploit</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;metasploit install...&#x27;</span></span><br><span class="line">    curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; <span class="built_in">chmod</span> 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="awvs"><a href="#awvs" class="headerlink" title="awvs"></a>awvs</h3><p>awvs一键安装<del><code>from</code>法海</del>，u&#x2F;p：<code>Awvs@awvs.lan</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -sk https://raw.githubusercontent.com/kzaopa/tools/master/awvs/check.sh) xrsec/awvs</span><br></pre></td></tr></table></figure><h3 id="nessus"><a href="#nessus" class="headerlink" title="nessus"></a>nessus</h3><p>docker部署nessus <del><code>from</code>老王&#96;</del>，u&#x2F;p：<code>Nessus</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull 20142995/nessus-10.1.2:20220409</span><br><span class="line">docker run -dit -p 8089:8834 20142995/nessus-10.1.2:20220409</span><br></pre></td></tr></table></figure><h3 id="xray"><a href="#xray" class="headerlink" title="xray"></a>xray</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#xray install</span></span><br><span class="line"><span class="function"><span class="title">iXRAY</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;xray install...&#x27;</span></span><br><span class="line">    <span class="built_in">mkdir</span> -p /opt/xray</span><br><span class="line">    <span class="built_in">cd</span> /opt/xray</span><br><span class="line">    wget https://github.com/chaitin/xray/releases/download/1.8.4/xray_linux_amd64.zip</span><br><span class="line">    unzip xray_linux_amd64.zip</span><br><span class="line">    <span class="built_in">mv</span> xray_linux_amd64 xray</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="chrome"><a href="#chrome" class="headerlink" title="chrome"></a>chrome</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#chrome install</span></span><br><span class="line"><span class="function"><span class="title">iChrome</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;chrome install...&#x27;</span></span><br><span class="line">    <span class="built_in">cd</span> /tmp/</span><br><span class="line">    apt install -y libxss1 libappindicator1 libindicator7</span><br><span class="line">    <span class="comment"># centos</span></span><br><span class="line">    wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm</span><br><span class="line">    yum localinstall google-chrome-stable_current_x86_64.rpm</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="some"><a href="#some" class="headerlink" title="some.."></a>some..</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">iTools</span></span>()&#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;tools install...&#x27;</span></span><br><span class="line">    yum update</span><br><span class="line">    yum install -y java-1.8.0-openjdk lrzsz git unzip python3-pip nmap</span><br><span class="line">    <span class="comment">#sqlmap</span></span><br><span class="line">    <span class="built_in">cd</span> /opt/</span><br><span class="line">    git <span class="built_in">clone</span> https://github.com/sqlmapproject/sqlmap.git</span><br><span class="line"></span><br><span class="line">    <span class="comment">#dirsearch</span></span><br><span class="line">    <span class="built_in">cd</span> /opt/</span><br><span class="line">    git <span class="built_in">clone</span> https://github.com/maurosoria/dirsearch.git</span><br><span class="line">    <span class="built_in">cd</span> dirsearch</span><br><span class="line">    pip3 install -r requirements.txt</span><br><span class="line"></span><br><span class="line">    <span class="comment"># awvs13_batch_py3</span></span><br><span class="line">    <span class="built_in">cd</span> /opt</span><br><span class="line">    git <span class="built_in">clone</span> https://github.com/test502git/awvs13_batch_py3.git</span><br><span class="line"></span><br><span class="line">    <span class="comment"># nuclei</span></span><br><span class="line">    <span class="built_in">cd</span> /opt</span><br><span class="line">    wget https://github.com/projectdiscovery/nuclei/releases/download/v2.6.8/nuclei_2.6.8_linux_amd64.zip</span><br><span class="line">    unzip nuclei_2.6.8_linux_amd64.zip</span><br><span class="line">    <span class="built_in">rm</span> -f nuclei_2.6.8_linux_amd64.zip</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># ksubdomain</span></span><br><span class="line">    <span class="built_in">cd</span> /opt</span><br><span class="line">    wget https://github.com/boy-hack/ksubdomain/releases/download/v1.9.5/KSubdomain-v1.9.5-linux.tar</span><br><span class="line">    tar -xf KSubdomain-v1.9.5-linux.tar</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用工具 </tag>
            
            <tag> bash脚本 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
